[{"C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\index.js":"1","C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\reportWebVitals.js":"2","C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\App.js":"3","C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\components\\main-table.js":"4","C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\components\\pagination.js":"5","C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\components\\table-header.js":"6","C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\components\\search.js":"7","C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\components\\useFullPageLoader.js":"8","C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\components\\loaderPage.js":"9"},{"size":547,"mtime":1609332760179,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1606218273185,"results":"12","hashOfConfig":"11"},{"size":444,"mtime":1610351203875,"results":"13","hashOfConfig":"11"},{"size":5196,"mtime":1610351296574,"results":"14","hashOfConfig":"11"},{"size":1381,"mtime":1609397384698,"results":"15","hashOfConfig":"11"},{"size":1332,"mtime":1609402253393,"results":"16","hashOfConfig":"11"},{"size":578,"mtime":1610351363745,"results":"17","hashOfConfig":"11"},{"size":378,"mtime":1609332896009,"results":"18","hashOfConfig":"11"},{"size":286,"mtime":1609333962067,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"10x73fd",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\index.js",[],["42","43"],"C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\reportWebVitals.js",[],"C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\App.js",[],"C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\components\\main-table.js",["44"],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Pagination from './pagination';\r\nimport TableHeader from './table-header';\r\nimport Search from './search';\r\nimport useFullPageLoader from './useFullPageLoader';\r\nimport axios from 'axios';\r\nimport {Table} from 'react-bootstrap';\r\n\r\n\r\n\r\nconst DataTable = () => {\r\n    const [comments, setComments] = useState([]);\r\n    const [loader, showLoader, hideLoader] = useFullPageLoader();\r\n    const [totalItems, setTotalItems] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\r\n\r\n    const ITEMS_PER_PAGE = 20;\r\n\r\n    const headers = [\r\n        { name: \"CustomerCanSee\", field: \"CustomerCanSee\", sortable: true },\r\n        { name: \"Description\", field: \"Description\", sortable: true },\r\n \r\n        { name: \"VersionNo\", field: \"VersionNo\", sortable: true },\r\n       \r\n         { name: \"DeveloperId\", field: \"DeveloperId\", sortable: true }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const getData = () => {\r\n            showLoader();\r\n\r\n            // fetch(\"http://localhost:3000/cars\")\r\n            //     .then(response => console.log(response))\r\n            //     .then(res => {\r\n            //         hideLoader();\r\n            //         setComments(res);\r\n            //         console.log(res)\r\n                    \r\n                    \r\n            //     });\r\n\r\n            axios\r\n                .get(\"http://localhost:3000/versions\")\r\n                .then((res) => {\r\n                    // console.log(res)\r\n                    hideLoader();\r\n                    console.log(res.data.versions.Items)\r\n                   setComments(res.data.versions.Items);\r\n                   \r\n                })\r\n        };\r\n\r\n        getData();\r\n    }, []);\r\n\r\n    const commentsData = useMemo(() => {\r\n        let computedComments = comments;\r\n\r\n        if (search) {\r\n            computedComments = computedComments.filter(\r\n                comment =>\r\n                    comment.Description.toLowerCase().includes(search.toLowerCase()) ||\r\n                    comment.DeveloperId.toLowerCase().includes(search.toLowerCase()) ||\r\n                    comment.VersionNo.toLowerCase().includes(search.toLowerCase()) \r\n            );\r\n        }\r\n\r\n        setTotalItems(computedComments.length);\r\n\r\n        //Sorting comments\r\n        if (sorting.field) {\r\n            const reversed = sorting.order === \"asc\" ? 1 : -1;\r\n            computedComments = computedComments.sort(\r\n                (a, b) =>\r\n                    reversed * a[sorting.field].localeCompare(b[sorting.field])\r\n            );\r\n        }\r\n\r\n        //Current Page slice\r\n        return computedComments.slice(\r\n            (currentPage - 1) * ITEMS_PER_PAGE,\r\n            (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n        );\r\n    }, [comments, currentPage, search, sorting]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"row w-100\">\r\n                <div className=\"col mb-3 col-12 text-center\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <Pagination\r\n                                total={totalItems}\r\n                                itemsPerPage={ITEMS_PER_PAGE}\r\n                                currentPage={currentPage}\r\n                                onPageChange={page => setCurrentPage(page)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6 d-flex flex-row-reverse\">\r\n                            <Search\r\n                                onSearch={value => {\r\n                                    setSearch(value);\r\n                                    setCurrentPage(1);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Table responsive size=\"sm\"  striped bordered hover variant=\"dark\">\r\n                        <TableHeader\r\n                            headers={headers}\r\n                            onSorting={(field, order) =>\r\n                                setSorting({ field, order })\r\n                            }\r\n                        />\r\n                        <tbody>\r\n                            {commentsData.map(comment => (\r\n                                <tr>\r\n                                    <th scope=\"row\" key={comment.ID}>\r\n                                        {comment.CustomerCanSee===\"1\" ?  \"Evet\" : \"HayÄ±r\"}\r\n                                    </th>\r\n                                    <td style={{textAlign:\"left\"}}>{ comment.Description}</td>\r\n                                    \r\n                                    <td>{comment.VersionNo}</td>\r\n                                    <td style={{textAlign:\"right\"}}>{comment.DeveloperId}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            {loader}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DataTable;","C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\components\\pagination.js",["45"],"import React,{useState, useEffect, useMemo} from 'react';\r\nimport Paginatin from 'react-bootstrap/Pagination';\r\n\r\n\r\n const PaginationComponent = ({\r\n    total=0,\r\n    itemsPerPage = 10,\r\n    currentPage = 1,\r\n    onPageChange\r\n}) => {\r\n\r\n    const [totalPages, setTotalPages] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if(total > 0 && itemsPerPage > 0 )\r\n            setTotalPages(Math.ceil(total / itemsPerPage));\r\n    },[total , itemsPerPage]);\r\n\r\n    const paginationItems = useMemo(() => {\r\n        const pages = [];\r\n\r\n        for(let i = 1; i <= totalPages; i++){\r\n            pages.push(\r\n                <Paginatin.Item\r\n                key={i}\r\n                active = { i === currentPage}\r\n                onClick={() => onPageChange(i)}\r\n                >\r\n                    {i}\r\n                </Paginatin.Item>\r\n            );\r\n        }\r\n\r\n\r\n        return pages;\r\n    }, [totalPages, currentPage]);\r\n    return(\r\n        <Paginatin>\r\n            <Paginatin.Prev\r\n                onClick={() => onPageChange(currentPage - 1)}\r\n                disabled={currentPage === 1}\r\n            />\r\n                {paginationItems}\r\n            <Paginatin.Next \r\n                onClick={() => onPageChange(currentPage - 1)}\r\n                disabled={currentPage === totalPages}\r\n            />\r\n        </Paginatin>\r\n    )\r\n}\r\n\r\nexport default PaginationComponent;","C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\components\\table-header.js",[],"C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\components\\search.js",[],"C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\components\\useFullPageLoader.js",[],"C:\\Users\\hakan\\OneDrive\\Desktop\\table\\src\\components\\loaderPage.js",[],["46","47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":56,"column":8,"nodeType":"54","endLine":56,"endColumn":10,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"56","line":36,"column":8,"nodeType":"54","endLine":36,"endColumn":33,"suggestions":"57"},{"ruleId":"48","replacedBy":"58"},{"ruleId":"50","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hideLoader' and 'showLoader'. Either include them or remove the dependency array.","ArrayExpression",["62"],"React Hook useMemo has a missing dependency: 'onPageChange'. Either include it or remove the dependency array. If 'onPageChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["63"],["60"],["61"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},"Update the dependencies array to be: [hideLoader, showLoader]",{"range":"68","text":"69"},"Update the dependencies array to be: [totalPages, currentPage, onPageChange]",{"range":"70","text":"71"},[1856,1858],"[hideLoader, showLoader]",[896,921],"[totalPages, currentPage, onPageChange]"]